" General
set hlsearch

" Tab
set tabstop=4
set softtabstop=0
set shiftwidth=4
set autoindent
"set softtabstop=0
"set shiftwidth=2
"set autoindent

" Numbers
set number

" Leader
let mapleader = ","
let g:mapleader = ","

" Signs
"set signcolumn=no

" Fix BS
set backspace=2

" Folding
"set foldmethod=syntax
"set foldcolumn=1
"let javaScript_fold=1
"set foldlevelstart=99

" esc remap
"inoremap kl <esc>
"xnoremap kl <esc> 
"inoremap lk <esc>
"xnoremap lk <esc> 
inoremap <leader>f <esc>
xnoremap <leader>f <esc>

" esc remap for command mode
cmap <C-space> <C-c>

" delete and cut
nnoremap x "_x
nnoremap d "_d
nnoremap D "_D
vnoremap d "_d
nnoremap <leader>d ""d
nnoremap <leader>D ""D
vnoremap <leader>d ""d

" Pathogen
execute pathogen#infect()

" Paredit
let g:paredit_electric_return=0
let g:paredit_mode=1

" Parinfer

" NERDCommenter remap
"nmap <silent> <leader>ci <Plug>NERDCommenterComment
"nmap <silent> <leader>c <Plug>NERDCommenterInvert
"vmap <silent> <leader>ci <Plug>NERDCommenterComment
"vmap <silent> <leader>c <Plug>NERDCommenterInvert
nmap <silent> <leader>c<space> <Plug>NERDCommenterComment
nmap <silent> <leader>cc <Plug>NERDCommenterToggle
vmap <silent> <leader>c<space> <Plug>NERDCommenterComment
vmap <silent> <leader>cc <Plug>NERDCommenterToggle

" Clipboard copy
noremap <silent> <leader>g "*y
noremap <silent> <leader>p "*p

" Plug Plugins
call plug#begin('~/.vim/plugged')
"Plug 'OmniSharp/omnisharp-vim'
"Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'dense-analysis/ale'
call plug#end()

" ALE
let g:ale_linters = {
\ 'cs': ['OmniSharp']
\}
let b:ale_linters = ['cs']
autocmd FileType cs nmap <silent> <buffer> <leader>gd <Plug>(omnisharp_go_to_definition)
autocmd FileType cs nmap <silent> <buffer> <leader>rn <Plug>(omnisharp_rename)
autocmd FileType cs nmap <silent> <buffer> <leader>ff :OmniSharpCodeFormat<CR>

" Prevent multi line auto comments
set formatoptions-=cro
autocmd BufNewFile,BufRead * setlocal formatoptions-=cro

" Color
"syntax off
"colorscheme off

" Easy motion
"map <Leader> <Plug>(easymotion-prefix)
